/**
 * Block: Buttons
 */

.wp-block-buttons {
	&.is-vertical {
		.wp-block-button {
			&__width {
				&-25 {
					width: 25%;
				}
				&-50 {
					width: 50%;
				}
				&-75 {
					width: 75%;
				}
			}
		}
	}
}

/**
 * Block: Button
 */

.wp-block-button {
	--gap: var(--block-spacing, 0.5em);

	&__link {
		@extend %button;
		width: 100%;

		// Gutenberg button doesn't have border color options, so we always set them to transparent.
		border-color: transparent;

		// Gutenberg button doesn't have border color options, so we always set them to transparent.
		&:hover,
		&:focus {
			border-color: transparent;
		}

		&.aligncenter {
			text-align: center;
		}

		&.alignright {
			/*rtl:ignore*/
			text-align: right;
		}
	}

	&.is-style-outline {
		.wp-block-button__link {
			background-color: transparent;
			border-color: currentColor;
			color: var(--button--background-color, revert);

			&:not(:hover, :focus) { // When button .has-background-color, the background color is only used for hover state.
				background-color: transparent !important; // Use !important to override WP generated CSS
			}

			&:hover, &:focus {
				color: var(--button--background-color--focus, var(--button--background-color));
			}
		}
	}

	&__width {
		&-25 {
			width: calc( 25% - ( var(--gap) * ( 3 / 4 ) ) );
		}
		&-50 {
			width: calc( 50% - ( var(--gap) * ( 1 / 2 ) ) );
		}
		&-75 {
			width: calc( 75% - ( var(--gap) * ( 3 / 4 ) ) );
		}
		&-100 {
			width: 100%;
		}
	}
}

/**
 * Block: Columns
 */

.wp-block-columns {
	--gap: var(--block-spacing);

	display: flex;
	flex-wrap: wrap;
	align-items: flex-start;

	// &:not([class*="are-vertically-aligned-"]) {
	// 	align-items: flex-start;
	// }

	@include padding-for-has-background();

	&.is-not-stacked-on-mobile {
		flex-wrap: nowrap;
	}

	// Vertical alignment (CORE FEATURES)
	&.are-vertically-aligned {
		&-top {
			align-items: flex-start;
		}

		&-center {
			align-items: center;
		}

		&-bottom {
			align-items: flex-end;
		}
	}

	@media screen and ( min-width: $breakpoint-tablet ) {
		flex-wrap: nowrap;
	}
}

/**
 * Block: Column
 */

.wp-block-column {
	flex-grow: 1; // Column with unspecified width will fill the blank space
	flex-basis: 0;

	// Prevent the columns from growing wider than their distributed sizes.
	min-width: 0;

	// Prevent long unbroken words from overflowing.
	word-break: break-word; // For back-compat.
	overflow-wrap: break-word; // New standard.

	@include padding-for-has-background();

	&[style*="flex-basis"] {
		flex-grow: 0; // Disable grow if specific column's width is set
	}

	// Vertical alignment (CORE FEATURES)
	&.is-vertically-aligned {
		&-top {
			align-self: flex-start;
		}

		&-center {
			align-self: center;
		}

		&-bottom {
			align-self: flex-end;
		}
	}
}

:where(.wp-block-columns):not(.is-not-stacked-on-mobile) > :where(.wp-block-column) {
	@media screen and ( max-width: ( $breakpoint-tablet - 1px ) ) {
		// Responsiveness: Show at most one columns on mobile. This must be
		// important since the Column assigns its own width as an inline style.
		flex-basis: 100% !important;
	}
}

/**
 * Block: Group
 */

.wp-block-group {
	@include padding-for-has-background();
}

/**
 * Block: Separator
 */

.wp-block-separator {
	width: 6rem;

	@include remove-margin-top-for-first-child();
	@include remove-margin-bottom-for-last-child();

	&:where( .has-text-color, .has-background ) {
		--border-color: currentColor;
	}

	// Default style
	&:not([class*="is-style-"]), &.is-style-default {
		border-bottom-width: 0.2rem;
	}

	// Wide line style
	&.is-style-wide {
		width: auto;
	}

	// Dots style
	&.is-style-dots {
		border: none;
		width: 4.5rem;
		height: 0.35rem;

		&:before {
			content: "";
			display: block;
			width: 100%;
			height: 100%;
			background-image: radial-gradient(var(--border-color) 15%, transparent 15%);
			background-repeat: repeat;
			background-size: 1.5rem 1.5rem;
			background-position: center;
		}
	}
}

/**
 * Block: Spacer
 */

.wp-block-spacer {
	clear: both;
}
