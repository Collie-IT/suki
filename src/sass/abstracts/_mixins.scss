// Float container
@mixin float-container() {
	&::before,
	&::after {
		content: "";
		display: table;
	}

	&::after {
		clear: both;
	}
}

// Remove top margin of an element if it's the first child
@mixin remove-margin-top-for-first-child( $important: true ) {
	&:first-child {
		@if $important {
			margin-top: 0 !important;
		} @else {
			margin-top: 0;
		}
	}
}

// Remove bottom margin of an element if it's the last child
@mixin remove-margin-bottom-for-last-child( $important: true ) {
	&:last-child {
		@if $important {
			margin-bottom: 0 !important;
		} @else {
			margin-bottom: 0;
		}
	}
}

// Hide element
@mixin hide( $transition: true ) {
	opacity: 0;
	visibility: hidden;

	@if $transition {
		transition: opacity var(--transition-duration), visibility 0s var(--transition-duration); // hide transition
	} @else {
		transition: none;
	}
}

// Show element
@mixin show( $transition: true ) {
	opacity: 1;
	visibility: visible;

	@if $transition {
		transition: opacity var(--transition-duration), visibility 0s; // show transition
	} @else {
		transition: none;
	}
}

// Reverse link color
@mixin reverse-link-color() {
	color: inherit;

	&:hover, &:focus {
		color: var(--link-color);
	}
}

// Admin bar top offset
@mixin admin-bar-top-offset() {
	top: 0;

	.admin-bar & {
		@media screen and ( min-width: $adminbar-breakpoint-sticky ) {
			top: $adminbar-height-mobile;
		}
	
		@media screen and ( min-width: $adminbar-breakpoint ) {
			top: $adminbar-height;
		}
	}
}

// Title typography
@mixin title-typography() {
	font-family: var(--title--font-family);
	font-size: var(--title--font-size);
	font-style: var(--title--font-style);
	font-weight: var(--title--font-weight);
	line-height: var(--title--line-height);
	letter-spacing: var(--title--letter-spacing);
	text-transform: var(--title--text-transform);
}

// Title color
@mixin title-color() {
	color: var(--title--text-color);

	a {
		color: inherit;
	
		&:focus, &:hover {
			color: var(--title--text-color--focus);
		}
	}
}

// Small title typography
@mixin small-title-typography() {
	font-family: var(--small-title--font-family);
	font-size: var(--small-title--font-size);
	font-style: var(--small-title--font-style);
	font-weight: var(--small-title--font-weight);
	line-height: var(--small-title--line-height);
	letter-spacing: var(--small-title--letter-spacing);
	text-transform: var(--small-title--text-transform);
}

// Small title color
@mixin small-title-color() {
	color: var(--small-title--text-color);

	a {
		color: inherit;
	
		&:focus, &:hover {
			color: var(--small-title--text-color--focus);
		}
	}
}

// Meta typography
@mixin meta-typography() {
	font-family: var(--meta--font-family);
	font-size: var(--meta--font-size);
	font-style: var(--meta--font-style);
	font-weight: var(--meta--font-weight);
	line-height: var(--meta--line-height);
	letter-spacing: var(--meta--letter-spacing);
	text-transform: var(--meta--text-transform);
}

// Meta color
@mixin meta-color() {
	color: var(--meta--text-color);

	a {
		color: inherit;
	
		&:focus, &:hover {
			color: var(--meta--text-color--focus);
		}
	}
}

// Padding when element has .has-background
@mixin padding-for-has-background() {
	&:where(.has-background) {
		padding: var(--wp--style--block-gap);
	}
}

// Align left & right max width
@mixin max-width-for-alignleft-alignright() {
	// Apply max-width to floated items that have no intrinsic width.
	&:where(.alignleft, .alignright) {
		max-width: calc( 50% - ( var(--wp--style--block-gap) / 2 ) );; // Fix value, only overrideable via custom CSS
		width: 100%;
	}
}

// Align full ignores padding
@mixin stretch-alignfull() {
	&:where(.alignfull) {
		margin-left: calc( -1 * ( min( var(--full-size), 100vw ) - 100% ) / 2 ) !important;
		margin-right: calc( -1 * ( min( var(--full-size), 100vw ) - 100% ) / 2 ) !important;
	}
}