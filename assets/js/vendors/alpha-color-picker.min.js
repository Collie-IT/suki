!function(i){function r(i){var r;return(i=i.replace(/ /g,"")).match(/rgba\(\d+\,\d+\,\d+\,([^\)]+)\)/)?(r=100*parseFloat(i.match(/rgba\(\d+\,\d+\,\d+\,([^\)]+)\)/)[1]).toFixed(2),r=parseInt(r)):r=100,r}function a(i,r,a,n){var e,o,c;e=r.data("a8cIris"),o=r.data("wpWpColorPicker"),e._color._alpha=i,c=e._color.toString(),r.val(c),o.toggler.css({"background-color":c}),n&&"true"===showOpacity&&t(i,a),r.wpColorPicker("color",c)}function t(i,r){r.slider("value",i),r.find(".ui-slider-handle").text(i.toString())}Color.prototype.toString=function(i){if("no-alpha"==i)return this.toCSS("rgba","1").replace(/\s+/g,"");if(1>this._alpha)return this.toCSS("rgba",this._alpha).replace(/\s+/g,"");var r=parseInt(this._color,10).toString(16);if(this.error)return"";if(r.length<6)for(var a=6-r.length-1;a>=0;a--)r="0"+r;return"#"+r},i.fn.alphaColorPicker=function(n){return void 0===n&&(n={}),this.each((function(){var e,o,c,l,s,d,p,u,h,f;(e=i(this)).wrap('<div class="alpha-color-picker-wrap"></div>'),c=e.attr("data-palette")||"true",l=e.attr("data-show-opacity")||"true",s=e.attr("data-default-color")||"",d=-1!==c.indexOf("|")?c.split("|"):"false"!=c,""==(o=e.val().replace(/\s+/g,""))&&(o=s),p={change:function(a,t){var o,c;o=e.wpColorPicker("color"),s==o&&"true"===l&&(c=r(o),h.find(".ui-slider-handle").text(c)),u.find(".transparency").css("background-color",t.color.toString("no-alpha")),i.isFunction(n.change)&&n.change.call(this,a)},clear:function(r,a){i.isFunction(n.clear)&&n.clear.call(this,r)},palettes:d},e.wpColorPicker(p),u=e.parents(".wp-picker-container:first"),"true"===l&&(i('<div class="alpha-color-picker-container"><div class="min-click-zone click-zone"></div><div class="max-click-zone click-zone"></div><div class="alpha-slider"></div><div class="transparency"></div></div>').appendTo(u.find(".wp-picker-holder")),h=u.find(".alpha-slider"),f={create:function(r,a){var t=i(this).slider("value");i(this).find(".ui-slider-handle").text(t),i(this).siblings(".transparency ").css("background-color",o)},value:r(o),range:"max",step:1,min:0,max:100,animate:300},h.slider(f),u.find(".min-click-zone").on("click",(function(){a(0,e,h,!0)})),u.find(".max-click-zone").on("click",(function(){a(100,e,h,!0)})),h.slider().on("slide",(function(r,t){a(parseFloat(t.value)/100,e,h,!1),i(this).find(".ui-slider-handle").text(t.value)}))),u.find(".iris-palette").on("click",(function(){var a=i(this).css("background-color");if("true"===l){var n=r(a);t(n,h),100!=n&&(a=a.replace(/[^,]+(?=\))/,(n/100).toFixed(2)))}e.wpColorPicker("color",a)})),u.find(".button.wp-picker-default").on("click",(function(){"true"===l&&t(r(s),h)})),e.on("input",(function(){"true"===l&&t(r(i(this).val()),h)}))}))}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
